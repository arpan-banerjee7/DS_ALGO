												Binary Tree Notes	


------------------------------------------------Tree Traversals----------------------------------------------------------------

	Inorder Traversal  L N R
Recursive
Iterative with extra space- https://www.geeksforgeeks.org/inorder-tree-traversal-without-recursion/
Iterative without extra space( Morris Traversal- uses concept of threaded Binary Tree) https://www.geeksforgeeks.org/inorder-tree-traversal-without-recursion-and-without-stack/
video desc striver- https://www.youtube.com/watch?v=80Zug6D1_r4&list=PLgUwDviBIf0q8Hkd7bK2Bpryj2xVJk8Vk&index=39


	Preorder Traversal    N L R
Recursive
Iterative- with/ without space - https://www.geeksforgeeks.org/iterative-preorder-traversal/
Without space - modify Morris traversal for inorder

	Postorder  L R N
Recursive
video sol- striver
Iterative- with 2 stack-- https://www.geeksforgeeks.org/iterative-postorder-traversal/
Iterative with 1 stack-- https://www.geeksforgeeks.org/iterative-postorder-traversal-using-stack/


Maximum Path sum- 
1) from any node to any node- https://leetcode.com/problems/binary-tree-maximum-path-sum/
2) from leaf node to leaf node(correct solution not found)- https://www.youtube.com/watch?v=FxgpgxH2k8o
https://practice.geeksforgeeks.org/problems/maximum-path-sum/1

Boundary Traversal-
Striver - https://www.youtube.com/watch?v=0ca1nvR0be4&list=PLgUwDviBIf0q8Hkd7bK2Bpryj2xVJk8Vk&index=22
https://www.geeksforgeeks.org/boundary-traversal-of-binary-tree/

Vertical Order Traversal-
Striver- https://www.youtube.com/watch?v=q_a6lpbKJdw&list=PLgUwDviBIf0q8Hkd7bK2Bpryj2xVJk8Vk&index=23
https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree/discuss/231148/Java-TreeMap-Solution

Top View of a binary tree-- Cut down TC from o(nlogn) to O(n)
https://practice.geeksforgeeks.org/problems/top-view-of-binary-tree/1
https://www.hackerrank.com/challenges/tree-top-view/problem?isFullScreen=false

Bottom View Of Binary Tree- Cut down TC from o(nlogn) to O(n) same as top view, just keep updating the map
https://practice.geeksforgeeks.org/problems/bottom-view-of-binary-tree/1

Right/Left view of Binary Tree- can avoid using map b using a array an comapring the size before inserting
https://leetcode.com/problems/binary-tree-right-side-view/submissions/
https://www.youtube.com/watch?v=KV4mRzTjlAk&list=PLgUwDviBIf0q8Hkd7bK2Bpryj2xVJk8Vk&index=25



---------------------------------------------Other Problems-------------------------------------------------------------------


Path from root to a given node- https://www.youtube.com/watch?v=fmflMqVOC7k&list=PLgUwDviBIf0q8Hkd7bK2Bpryj2xVJk8Vk&index=28
https://www.interviewbit.com/problems/path-to-given-node/
https://www.geeksforgeeks.org/print-path-root-given-node-binary-tree/

Lowest Common Ancestor-- can be solved using Path from root to a given node but uses extra 
https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree/
space-https://www.youtube.com/watch?v=_-QHfMDde90&list=PLgUwDviBIf0q8Hkd7bK2Bpryj2xVJk8Vk&index=28

Max width of a binary tree- cool trick to prevent overflow- https://leetcode.com/problems/maximum-width-of-binary-tree/
https://www.youtube.com/watch?v=ZbybYvcVLks&list=PLgUwDviBIf0q8Hkd7bK2Bpryj2xVJk8Vk&index=29

Check Children sum property - https://www.geeksforgeeks.org/check-for-children-sum-property-in-a-binary-tree/
https://practice.geeksforgeeks.org/problems/children-sum-parent/1#

Make the binary tree follow children sum property- https://www.codingninjas.com/codestudio/problems/childrensumproperty_790723?source=youtube&amp;campaign=Striver_Tree_Videos&amp;utm_source=youtube&amp;utm_medium=affiliate&amp;utm_campaign=Striver_Tree_Videos
https://www.youtube.com/watch?v=fnmisPM6cVo&list=PLgUwDviBIf0q8Hkd7bK2Bpryj2xVJk8Vk&index=30
https://www.geeksforgeeks.org/convert-an-arbitrary-binary-tree-to-a-tree-that-holds-children-sum-property/

Nodes at k distance- 
https://practice.geeksforgeeks.org/problems/nodes-at-given-distance-in-binary-tree/1 to down
https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree/submissions/
https://www.youtube.com/watch?v=i9ORlEy6EsI&list=PLgUwDviBIf0q8Hkd7bK2Bpryj2xVJk8Vk&index=31

Burn the binary tree-
https://www.youtube.com/watch?v=2r5wLmQfD6g&list=PLgUwDviBIf0q8Hkd7bK2Bpryj2xVJk8Vk&index=32
https://www.geeksforgeeks.org/burn-the-binary-tree-starting-from-the-target-node/
https://www.interviewbit.com/problems/burn-a-tree/
https://www.codingninjas.com/codestudio/problems/time-to-burn-tree_630563

Count nodes in a complete binary tree-o(logn^2) https://www.youtube.com/watch?v=u-yWemKGWO0&list=PLgUwDviBIf0q8Hkd7bK2Bpryj2xVJk8Vk&index=34
https://leetcode.com/problems/count-complete-tree-nodes/submissions/



-----------------------------------------------TREE CONSTRUCTION-------------------------------------------------------------


Construct in level order fashion from parent array-
https://www.geeksforgeeks.org/construct-complete-binary-tree-given-array/

Construct BT from Inorder and Preorder-
https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/
https://www.youtube.com/watch?v=aZNaLrVebKQ&list=PLgUwDviBIf0q8Hkd7bK2Bpryj2xVJk8Vk&index=35

Consrtuct Bt from inorder and postorder-https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal/
https://www.youtube.com/watch?v=s5XRtcud35E
--------------

Flatten a Binary Tree- 3 ways check leetcode notes
https://www.youtube.com/watch?v=sWf7k1x9XR4&list=PLgUwDviBIf0q8Hkd7bK2Bpryj2xVJk8Vk&index=39
https://leetcode.com/problems/flatten-binary-tree-to-linked-list/



-----------------------------------------------------BST-----------------------------------------------------------------------


TC of binary search proof- https://www.youtube.com/watch?v=hA8xu9vVZN4

Search in BST-
https://www.youtube.com/watch?v=KcNt6v_56cc&list=PLgUwDviBIf0q8Hkd7bK2Bpryj2xVJk8Vk&index=41
https://leetcode.com/problems/search-in-a-binary-search-tree/submissions/

Ceil BST- 
https://www.youtube.com/watch?v=KSsk8AhdOZA&list=PLgUwDviBIf0q8Hkd7bK2Bpryj2xVJk8Vk&index=42
https://www.codingninjas.com/codestudio/problems/ceil-from-bst_920464?source=youtube&campaign=Striver_Tree_Videos&utm_source=youtube&utm_medium=affiliate&utm_campaign=Striver_Tree_Videos&leftPanelTab=1

Floor BST-
https://www.youtube.com/watch?v=xm_W1ub-K-w&list=PLgUwDviBIf0q8Hkd7bK2Bpryj2xVJk8Vk&index=43
https://www.codingninjas.com/codestudio/problems/floor-from-bst_920457?source=youtube&campaign=Striver_Tree_Videos&utm_source=youtube&utm_medium=affiliate&utm_campaign=Striver_Tree_Videos&leftPanelTab=1

Insert Node in BST-
https://www.youtube.com/watch?v=FiFiNvM29ps&list=PLgUwDviBIf0q8Hkd7bK2Bpryj2xVJk8Vk&index=45
https://leetcode.com/problems/insert-into-a-binary-search-tree/submissions/

Delete a Node in BST(tricky) --
https://www.youtube.com/watch?v=kouxiP_H5WE&list=PLgUwDviBIf0q8Hkd7bK2Bpryj2xVJk8Vk&index=45
https://leetcode.com/problems/delete-node-in-a-bst/submissions/

Kth smallest element in BSt- to fo follow up
https://www.youtube.com/watch?v=9TJYWh0adfk&list=PLgUwDviBIf0q8Hkd7bK2Bpryj2xVJk8Vk&index=46
 https://leetcode.com/problems/kth-smallest-element-in-a-bst/
 If the BST is modified often (i.e., we can do insert and delete operations) and you need to find the kth smallest frequently, how would you optimize?

validate a tree as BSt-
https://www.youtube.com/watch?v=f-sj7I5oXEI&list=PLgUwDviBIf0q8Hkd7bK2Bpryj2xVJk8Vk&index=47
	https://leetcode.com/problems/validate-binary-search-tree/

LCS in BST-easy, from where both the nodes splits that is our ans
https://www.youtube.com/watch?v=cX_kPV_foZc&list=PLgUwDviBIf0q8Hkd7bK2Bpryj2xVJk8Vk&index=48
	https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/

Inorder successor/predecessor of BST-https://www.youtube.com/watch?v=SXKAD2svfmI&list=PLgUwDviBIf0q8Hkd7bK2Bpryj2xVJk8Vk

Implement Binary Seacrh Iterator- follow the same technique as inorder iterative traversalpushLeft-
https://www.youtube.com/watch?v=D2jMcmxU4bs&list=PLgUwDviBIf0q8Hkd7bK2Bpryj2xVJk8Vk&index=51
https://leetcode.com/problems/binary-search-tree-iterator/submissions/


Two sum- use concept of Binary Seach Tree iterator/submissions/
https://www.youtube.com/watch?v=ssL3sHwPeb4&list=PLgUwDviBIf0q8Hkd7bK2Bpryj2xVJk8Vk&index=52
	https://leetcode.com/problems/two-sum/
	
Recover BST-
https://www.youtube.com/watch?v=ZWGW7FminDM&list=PLgUwDviBIf0q8Hkd7bK2Bpryj2xVJk8Vk&index=53
	https://leetcode.com/problems/recover-binary-search-tree/


Largest BST in a Binary Tree-
https://www.youtube.com/watch?v=X0oXMdtUDwo&list=PLgUwDviBIf0q8Hkd7bK2Bpryj2xVJk8Vk&index=55
	https://practice.geeksforgeeks.org/problems/largest-bst/1#



--------------------------------------Techdose leftover questions-----------------------------------------------------------

Count good Nodes-
https://www.youtube.com/watch?v=7cp5imvDzl4 -- diff approach
	https://leetcode.com/problems/count-good-nodes-in-binary-tree/submissions/
	
	
Invert Binary Tree-
https://www.google.com/search?q=226.+invert+binary+tree&oq=226.+Invert+Binary+Tree&aqs=edge.0.69i59i512j0i512l2.506j0j4&sourceid=chrome&ie=UTF-8
	https://leetcode.com/problems/invert-binary-tree/


Binary tree to DLL -
https://www.youtube.com/watch?v=WVFk9DwRgpY
	https://practice.geeksforgeeks.org/problems/binary-tree-to-dll/1#
	
Binary Tree to CDLL-
https://www.youtube.com/watch?v=WVFk9DwRgpY
		https://practice.geeksforgeeks.org/problems/binary-tree-to-cdll/1

