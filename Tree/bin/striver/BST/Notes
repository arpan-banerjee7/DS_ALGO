
-----------------------------------------------------BST-----------------------------------------------------------------------


TC of binary search proof- https://www.youtube.com/watch?v=hA8xu9vVZN4

Search in BST-
https://www.youtube.com/watch?v=KcNt6v_56cc&list=PLgUwDviBIf0q8Hkd7bK2Bpryj2xVJk8Vk&index=41
https://leetcode.com/problems/search-in-a-binary-search-tree/submissions/

Ceil BST- 
https://www.youtube.com/watch?v=KSsk8AhdOZA&list=PLgUwDviBIf0q8Hkd7bK2Bpryj2xVJk8Vk&index=42
https://www.codingninjas.com/codestudio/problems/ceil-from-bst_920464?source=youtube&campaign=Striver_Tree_Videos&utm_source=youtube&utm_medium=affiliate&utm_campaign=Striver_Tree_Videos&leftPanelTab=1

Floor BST-
https://www.youtube.com/watch?v=xm_W1ub-K-w&list=PLgUwDviBIf0q8Hkd7bK2Bpryj2xVJk8Vk&index=43
https://www.codingninjas.com/codestudio/problems/floor-from-bst_920457?source=youtube&campaign=Striver_Tree_Videos&utm_source=youtube&utm_medium=affiliate&utm_campaign=Striver_Tree_Videos&leftPanelTab=1

Insert Node in BST-
https://www.youtube.com/watch?v=FiFiNvM29ps&list=PLgUwDviBIf0q8Hkd7bK2Bpryj2xVJk8Vk&index=45
https://leetcode.com/problems/insert-into-a-binary-search-tree/submissions/

Delete a Node in BST(tricky) --
https://www.youtube.com/watch?v=kouxiP_H5WE&list=PLgUwDviBIf0q8Hkd7bK2Bpryj2xVJk8Vk&index=45
https://leetcode.com/problems/delete-node-in-a-bst/submissions/

Kth smallest element in BSt- to fo follow up
https://www.youtube.com/watch?v=9TJYWh0adfk&list=PLgUwDviBIf0q8Hkd7bK2Bpryj2xVJk8Vk&index=46
 https://leetcode.com/problems/kth-smallest-element-in-a-bst/
 If the BST is modified often (i.e., we can do insert and delete operations) and you need to find the kth smallest frequently, how would you optimize?

validate a tree as BSt-
https://www.youtube.com/watch?v=f-sj7I5oXEI&list=PLgUwDviBIf0q8Hkd7bK2Bpryj2xVJk8Vk&index=47
	https://leetcode.com/problems/validate-binary-search-tree/

LCS in BST-easy, from where both the nodes splits that is our ans
https://www.youtube.com/watch?v=cX_kPV_foZc&list=PLgUwDviBIf0q8Hkd7bK2Bpryj2xVJk8Vk&index=48
	https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/

Inorder successor/predecessor of BST-https://www.youtube.com/watch?v=SXKAD2svfmI&list=PLgUwDviBIf0q8Hkd7bK2Bpryj2xVJk8Vk

Implement Binary Seacrh Iterator- follow the same technique as inorder iterative traversalpushLeft-
https://www.youtube.com/watch?v=D2jMcmxU4bs&list=PLgUwDviBIf0q8Hkd7bK2Bpryj2xVJk8Vk&index=51
https://leetcode.com/problems/binary-search-tree-iterator/submissions/


Two sum- use concept of Binary Seach Tree iterator/submissions/
https://www.youtube.com/watch?v=ssL3sHwPeb4&list=PLgUwDviBIf0q8Hkd7bK2Bpryj2xVJk8Vk&index=52
	https://leetcode.com/problems/two-sum/
	
Recover BST-
https://www.youtube.com/watch?v=ZWGW7FminDM&list=PLgUwDviBIf0q8Hkd7bK2Bpryj2xVJk8Vk&index=53
	https://leetcode.com/problems/recover-binary-search-tree/


Largest BST in a Binary Tree-
https://www.youtube.com/watch?v=X0oXMdtUDwo&list=PLgUwDviBIf0q8Hkd7bK2Bpryj2xVJk8Vk&index=55
	https://practice.geeksforgeeks.org/problems/largest-bst/1#
