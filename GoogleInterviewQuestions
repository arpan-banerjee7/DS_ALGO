Google Interview Questions

1) Write a function which shows the top 10 largest files with its size under an object storage bucket. Write a function which shows the top 10 largest files with its size under an object storage bucket. Input: URI for an object storage bucket. e.g. gs://bucket.storage.google.com  Output:  558112992 gs://bucket.storage.google.com/video/fancy_movie.mp4 398716355 gs://bucket.storage.google.com/video/short_video.mp4 193856121 gs://bucket.storage.google.com/music/awersome_music.mp3 123908765 gs://bucket.storage.google.com/music/favorite_music.mp3 91736561 gs://bucket.storage.google.com/backup.dat 81238575 gs://bucket.storage.google.com/music/voice/voice_memo.mp3 ... 2769876 gs://bucket.storage.google.com/video/thumbnail/1978236.jpg 
Background Let the candidate know they can assume the followingTC can assume there are APIs below available to access the object storage. storage.list(uri) Returns a list of fully qualified paths for immediate files and/or directories under the parent given. uri can be a URI of an object storage (i.e. root) or a fully qualified path for a directory; e.g. gs://bucket.storage.google.com/some/where Null/None/nil will be returned if uri is a file. Empty list will be returned if the parent does not have any files or directories under itself.storage.size(uri) Returns the size of the file identified by the uri given in bytes. -1 will be returned if the uri is not of a file.

2) Six degrees of separation.https://leetcode.com/discuss/interview-question/665711/six-degrees-of-separation
3)1101. The Earliest Moment When Everyone Become Friends https://leetcode.com/problems/the-earliest-moment-when-everyone-become-friends/editorial/Here we have an event log file which is produced by the Friends service like below: 1648305616 Alice and Bob become friends 1648305678 Charlie and Dan become friends 1648306171 Bob and Charlie become friends 1648306237 Alice and Erin become friends ... Given a list of all users and the logs above, implement a function to find the earliest time when everyone became reachable to every other person through the friends.

4) 1202. Smallest String With Swaps
You are given a string str and an array of pairs in the string, where each pairs[i] = [a, b] indicates 2 indices of the string. You are given a string str and an array of pairs in the string, where each pairs[i] = [a, b] indicates 2 indices of the string. We can swap the characters at any pair of indices in the given pair. any number of times. We need to figure out the lexicographically smallest string S that can be made after using the swaps. 

5)1966. Binary Searchable Numbers in an Unsorted ArrayDesign a search data structure to store and display recent searches. If a user just clicks the search bar without typing anything, it should return the N most recent searches. Given a search string it should save the search and also return the N most recent searches can you solve this using java, in an optimized way. please ,mention time and space complexity as well. This is an interview question
6)Most Recent Searches You're working on a search bar and want to implement a "most recent searches" feature. When someone clicks the search bar without typing anything, you want to show the user the N most recent searches. This will show the user what other people are interested in. Design a data structure that accepts the most recent user search string and returns an iterable of the N most recent user search strings. This question is based on a 2009 Xoogler question, but unfortunately the old author is not visible in the new version of go/iq , so I cannot credit them here. I have re-disguised the question to make the answer less-easily searchable.
7) Partly inspired by question 1684. You are receiving 2D GPS coordinates in a plane from some service and your task is to write a program that detects if a given point can create a square with any 3 previously seen points. Only squares consisting of horizontal and vertical lines are considered. Let's denote the method as add(x, y) that returns true if (x,y) can be used to create a square, false otherwise. Example input: (1,2), (3,5), (1,5), (4,2), (4,5) Solutions: add(1,2) returns false add(3,5) returns false add(1,5) returns false add(4,2) returns false add(4,5) returns true - there is a square (1,2), (1,5), (4,5), (4,2) Why this works well: - The problem can be easily described. - No any special data structures or algorithms are required. - It has multiple solutions of different quality. - I think the solution 3 can be implemented in the interview time frame. Pitfalls - Candidates may confuse squares with rectangles. - Without careful naming of variables candidates can confuse X/Y and generally mess up. - Trying to create a helper function usually goes poorly -- the only one that helps is 'hasPoint' (at the cost of some efficiency). - Candidates often miss the need handle 0 size squares and duplicate points.Similar questionshttps://leetcode.com/problems/valid-square/description/https://leetcode.com/problems/detect-squares/description/
8)Count number of nodes in each connected component after removing certain edges
https://leetcode.com/discuss/interview-question/6033838/Google-or-Virtual-Interview-or-Count-Nodesintellij
9)Performance bisect https://leetcode.com/discuss/interview-question/2058209/google-phone-screening-mountain-view-ca I have a file with the following format each line: startIP, endIP, cityName. Question: Write a function that takes as input an IP address and outputs its associated cityName. Example: File format: startIP, endIP, cityName 1.0.1.1, 1.0.1.10, NYC 1.0.1.20, 1.0.1.30, SF ... If the input is 1.0.1.9, the output should be NYC. Write code for the function.
10)How many ways can the party win the election? Imagine that each state is assigned a number of votes as follows: Alabama = 9 Alaska = 3 Arizona = 11 Arkansas = 6 Wyoming = 3 For the purpose of this question, assume that all states are "winner takes all." The winner of a state gets all the votes for that state. To be elected, a candidate must win more than total_votes / 2. The candidate from Party 1 is running against the candidate from Party 2. candidate. How many different combinations of states won by Party 1 are there that will elect the Party 1 candidate? For example, if Party 1 wins every state, the Party 1 candidate wins. If they win every state but lose Alabama, the candidate still wins. Another example with three states: StateA = 3 StateB = 4 StateC = 8 If Party 1 wins every state, their candidate will get elected. If they win StateA and StateC, their candidate will still get elected. If they win StateA and StateB but lose StateC, their candidate will not get elected

11)Find triples of values within at most *d* distance in streamed input Your task is to write a function that given a distance *d* and a stream of floating point values received one at a time, checks for groups of three values that are within at most *d* distance. As values are received they should be stored in memory. Whenever any group is found meeting the distance criteria, return the three values and remove them from memory. TIP: It may be helpful to present this question as such: Imagine you are standing at an incoming conveyor belt of items that need to be packaged into boxes of exactly three items that all fit together (for a later definition of "fit") and placed on a second, outgoing, conveyor belt. You have sufficient storage space to place items off to the side while you wait for a full triplet that all fit together. - Conveyor belt items are floating point numbers. - Three items that "fit together" means that all items are within distance *d* of each other.
Java treeset, red-black tree/ balanced binary search tree.
12)Find Variable Order Given a list of "greater than" pairs, return a tuple with: - Whether the list of pair comparisons given are valid. - If the list of pair comparisons is valid and there is a single sorted order for all the variables, the sorted order. - If there is a single sorted order, the minimum index i such that the first i pairs are sufficient to find the order. # a > b, b > c Input: [('a', 'b'), ('b', 'c')]Output: (True, ['c', 'b', 'a'], 1) Explanation: - There are no contradictory pairs in the input list. - ['c', 'b', 'a'] is the only ordering where a > b > c. - Without the last index, we would not know where to place c. Therefore, 
Input: [('a', 'b'), ('c', 'a'), ('b', 'c')] Output: (False, None, None) Explanation: - a cannot be greater than b and less than c because b is greater than c. # a > b, a > c
 Input: [('a', 'b'), ('a', 'c')] Output: (True, None, None)Explanation: - There are no contradictory pairs in the input list. - Multiple orders are possible. For example ['c', 'b', 'a'] and ['b', 'c', 'a'] are both valid. # a > b, b > c, c > d, a > d, b > d 
Input: [('a', 'b'), ('b', 'c'), ('c', 'd'), ('a', 'd'), ('b', 'd')]Output: (True, ['d', 'c', 'b', 'a'], 2) Explanation: - There are no contradictory pairs in the input list. - ['d', 'c', 'b', 'a'] is the only ordering where a > b > c > d. - The first three indices have pairs covering all the variables and the later indices don't update our knowledge (e.g. we don't learn d is also "in between" greater variables, which would make the input invalid).
13)There is a map of cities - like a real world country's map. Some cities have roads between them, and it takes a known time to traverse each road. I'm in city A and have a list of my favorite cities [F1..Fn]. 	+-----+ +-----+ +-----+ 8------>| A +-20-->| B +-4--->| E | | +--+--+ +--^--+ +-----+ | 10 7 | | | +--+--+ +--v--+ +--+--+ | H <-2--+ C +--10--> G | +--+--+ +-----+ +--+--+ 3 6 | | +--v--+ +--v--+ | F | | D | +-----+ +-----+ The question tests many areas: - Experience with graph theory, basic graph algorithms - Coming up with or modifying an existing algorithm to fit a specific problem - Mapping real-world constraints to an algorithm - Understanding of runtime complexity - Translating the algorithm into code, using well-known data structures and understanding their strengths and weaknesses Rated as T


/* There is a map of cities - like a real world country's map. Some cities have roads between them, and it takes a known time to traverse each road. I'm in city A and have a list of my favorite cities [F1..Fn]. Give an efficient algorithm to decide which of my favorite cities I can get to the fastest. */ X -> !visited -> add to queue X -> if visited -> previous trip time > current trip time -> add to queue A -> B -> C O((number of city + total roads)log(number of city)) + total fvrt cities) A -> B = 10; - 0 B -> C = 3; A -> C = 20; D -> E = 1; ->A -> {(B, 10) , (C,20)} B -> A,10, C, 3 /A - 0 /B - 10 C - 20; C - 13 struct comp { bool operator()(pair<int, int>p1, pair<int, int>p2) { return p1.first > p2.first; } } // {cityId, timetotravel} int findFastestFavoriteCity(vector<vector<pair<int ,int > > > cityMap, vector<int> fvrtCity) { priority_queue<pair<int, int>, vector<pair<int, int>>, comp> minheap; // pair {time, cityId) minheap(make_pair(0, 0)); int cityTime[cityMap.size() + 2] = INT_MAX; cityTime[0] = 0; while(!minheap.empty()) { pair<int, int> currCity = minheap.top(); int idx = currCity.second; int currTime = currCity.first; minheap.pop(); for (int i = 0 ; i < cityMap[idx].size(); i++) { int nbdCity = cityMap[idx][i].first; if (cityTime[nbdCity] > currTime + cityMap[idx][i].second) { cityTime[nbdCity] = currTime + cityMap[idx][i].second; minheap.push(make_pair(currTime + cityMap[idx][i].second, nbdCity)); } } } int minTime = INT_MAX; int cityIdx = -1; for (int i = 0 ; i < fvrtCity.size(); i++) { if (minTime > cityTime[fvrtCity[i]] && cityTime[fvrtCity[i] != INT_MAX) { minTime = cityTime[fvrtCity[i]]); cityIdx = fvrtCity[i]; } } return cityIdx; } F2 -> ..... -> A -> .......-> X F1 -> ... -> A -> ....... ->XSimple dijikstra

14)Construct a histogram of a parking garage's occupancy. Imagine we own a parking garage. All day, cars enter and exit. When a car enters, it takes a ticket from the gate machine. When a car exits, it returns the ticket to the gate machine. The machine prints the entry and exit time on each ticket. Now, it's the end of the day and we've got a big pile of tickets, and we want to figure out how many cars were in the garage at each time of the day. Write a function that takes as input an integer N and a list tickets of size L, and returns a list result such that len(result) == N and result[i] == the number of elements of tickets such that entry <= i <= exit. Example: N = 5 tickets = [(1, 3), (2, 4)] result = [0, 1, 2, 2, 1] Alternative flavour text: we manage a one-way passenger train route that has N segments and N+1 stops. Passengers buy tickets between two stops on this route. Each ticket has the index of the departure stop and the index of the arrival stop. We want to compute the train's occupancy on each segment of the route, where the segment i means the one immediately following the stop i. N = 5 segment index 0 1 2 3 4 route x-----x-----x-----x-----x-----x stop index 0 1 2 3 4 5 This option makes it easier to explain what N means. In this variant, tickets should use exclusive ends, because passengers get off at their final stop and are no longer on the train on the following segment of the route. Example: N = 5tickets = [(1, 4), (2, 5)]result = [0, 1, 2, 2, 1]
15)You are given N persons. M pairs of people among them meet each other every day . A person X is said to "know" another person Y if either X meets Y every day or there is a person Z that both X and Y "know". Count all pairs of persons that do not "know" each other. Input: First line contains N and M. Then follows M pairs of persons who meet every day. Sample Input: 6 5 0 1 1 2 2 0 3 4 3 5 Sample Output: 9 Rated as Tech-Software Engineer-General
Code below uses union finding method. Code is very readable and corner cases are covered. Data structures are very well used and understood. public int DoNotKnow(int n, int[][] meeting){ if(n==0){ return 0; } int[] parent= new int[n]; int[] size= new int[n]; for(int i=0;i< n;i++){ parent[i]= i; size[i]=1; } for(int i=0;i< meeting.length;i++){ int a= meeting[i][0]; int b= meeting[i][1]; union(parent, size, a, b); } // find out number of diconnected graphs List<Integer> dis= new ArrayList<Integer>(); for(int i=0;i< parent.length;i++){ if(parent[i]==i){ dis.add(size[i]); } } // dis -> List<Integer> cum= new ArrayList<Integer>(); int curr=0; for(int i=0;i< dis.size();i++){ curr+= dis.get(i); cum.add(curr); } int ans=0; for(int i=0;i< dis.size();i++){ ans+= dis.get(i)* (cum.get(dis.size()-1)- cum.get(i)); } return ans; } //(n1*(n2+n3+....+n10) + n2*(n3+....+n10)+........... +n9*(n10)) public void union(int[] parent, int[] size, int a, int b){ int parA= findParent(parent,a); int parB= findParent(parent,b); if(parA==parB){ return; } int sizeA= size[parA]; int sizeB= size[parB]; if(sizeA>=sizeB){// make b a child of a parent[parB]= parA; size[parA]+= size[parB]; } else{// macke a child of b parent[parA]= parB; size[parB]+= size[parA]; } } public int findParent(int[] parent, int a){ if(parent[a]==a){ return a; } parent[a]= findParent(parent, parent[a]); return parent[a]; }DSU
16)Warmup: Imagine you have a robot that sends status messages that humans will read in real time. The raw messages are hard to read for a human because there are often many messages produced in short periods of time. One idea to make them more readable is to remove the duplicate messages over a 10 second window. Design and implement a program to hide duplicates of any message that has already been displayed within the past 10 seconds. Example Messages Received, with Timestamps: 10 solar panel activated 11 low battery warning 12 tire one: low air pressure 13 solar panel activated 14 low battery warning 21 solar panel activated 35 solar panel activated Example Messages Shown to User: 10 solar panel activated 11 low battery warning 12 tire one: low air pressure 21 solar panel activated 35 solar panel activated 
The real question is asked as a *follow-up*: From experience operating the robot, users have determined that there is a bug in the robot and duplicate messages are not to be trusted at all, and duplicate messages should be completely removed from the output if they occur within 10 seconds. Design and implement a program to completely remove the duplicate messages. Example Messages Received: 10 solar panel activated 11 low battery warning 12 tire one: low air pressure 13 solar panel activated 14 low battery warning 21 solar panel activated 35 solar panel activated Example Messages Shown to User: 12 tire one: low air pressure 35 solar panel activated

17)Broken teleporters *Warm-up question* In the year 2137 humans colonized other planets and discovered teleportation. Now every major city, colony and space station has a teleporter. You can instantaneously travel between teleporters that share a connection. However, some teleporters have become defective and if you travel there you can be "lost" forever. Your task is to find the minimum number of teleportations needed to go from teleporter A to B avoiding the broken teleporters. Input (you can propose your own types for the input parameters): - N - Number of teleporters (identified by consecutive numbers from 0 to N-1) - Connections[][] - Connections[x] is a list of teleporters directly reachable from teleporter "x" - Broken - the set of broken teleporters - Starting teleporter - Destination teleporter 
*Main question* Our brilliant technicians found a way to retrieve all the people and cargo "lost" while teleporting. The process is completely safe, however, it can take a significant amount of time to do so (~day). Given that, find a path from teleporter A to B that goes through the minimum number of broken teleporters. Since teleporting to a fully working teleporter takes no time, return only the number of broken teleporters on the path. *Example* No. teleporters: 7Connections: 0: [6] 1: [2, 5] 2: [1, 3, 4, 5] 3: [1, 4, 5] 4: [6] 5: [6] 6: [0] Broken: {5} Start: 1 Destination: 6 Optimal path has 3 teleportations: 1 -> 2 -> 4 -> 6bfs, djikstra with 1 edge weight for broken teleporters and 0 for good teleporters
18)You have a binary tree where each node contains an integer value. The tree is not balanced, and the values are not in any particular order. Find the number of identical subtrees of this tree. You have a binary tree where each node contains an integer value. The tree is not balanced, and the values are not in any particular order. Find the number of identical subtrees of this tree. 1 / \ 2 2 \ \ 3 3 Solution : 2 Explanation : tree with node 3 and a tree with nodes 2 & 3
19)A company called GoodCorp has a data network that can be visualized as a graph of nodes connected by cables where each node can transfer data to other nodes. A malicious hacker company, MaliciousCorp has managed to hack and corrupt one of these nodes which stops the transfer of data going through it. In Part 1, we start by giving TC a minimal framework to setup before building on top of it in a sequence that is easier to digest and parse for TC (L3). Then in Part 2, we add a new requirement that requires TC to add a new data structure and modify the original function to keep track of the cost. In Part 3, we introduce "virality", which asks TC to leverage the func that // calculates the distance/cost between nodes for the corrupted node. Part 1: Given this network and what node was corrupted, GoodCorp wants to know whether it is possible to transfer data between two nodes (a source and destination node). Can you write a function for this? Part 2: Now, GoodCorp wants to know the minimal cost or the distance between the source node and all other reachable (non-corrupted) nodes for record keeping, which can be represented as a map of node to distance. Can you update the func to provide for this? Part 3: Now, the corrupted node has gained the ability to corrupt its neighbors. Virality describes the maximum distance from the infected node that neighbors are also corrupted, so that data transferring through them is lost. Now, given the virality of the corrupted node, can you update the code to account for this? *Sample Input:* 1 - 2 - 3 8 - 10 - 12 | |\ / 4 - 5 - 6 - 7 9 - 11 *Sample output for Part #1:* Source Node: 2 Destination Node: 9 Corrupted Node: 7 Output: FALSE Explanation: We cannot reach Node 9 from Node 2 *Sample output for Part #2:* Source Node: 2 Corrupted Node: 7 Output: | | ---- | -------------------- Node | Distance from source 1 | 1 3 | 1 4 | 1 5 | 2 6 | 3 *Sample output for Part #3:* Source Node: 2 Corrupted Node : 10 Virality: 1 Output: | | ---- | -------------------- Node | Distance from source 1 | 1 3 | 1 4 | 1 5 | 2 6 | 3 7 | 4 Explanation: Node 10 will corrupt Nodes 8 and 12. So Node 7 cannot pass on its data to Node 8 and hence it will not reach any node from Node 7 onwards.
20)Islands in a tree of zeros and ones In a tree of zeros and ones, an island is defined as a group of ones that are surrounded by zeros or are at the boundary of the tree. Example: 0 / \ 1 1 / / 0 1 / \ 1 1 \ \ 1 1 Find the number of islands in the tree. In the above example, there are 4 islands.
21)Reduce Files to Directories A CLI (a Command-line interface) needs a list of files or directories to operate on. If it receives a directory it will operate on all files in that directory. We want to reduce the number of files in the list by just listing the directory if all files in that directory would be listed. Given a list of all files and a list of selected files, produce a minimal list of files and directories to send to the cli. Example: Each column below is a separate list. All files (Input) /a/b.txt /b/c.txt /b/d.txt /c/d.txt /c/e.txt /c/f/a.txt /c/f/b.txt /d/a/b.txt Selected files (Input) /b/c.txt /b/d.txt /c/e.txt /c/f/a.txt /c/f/b.txt /d/a/b.txt Output /b /c/e.txt /c/f /dCompressFilePathsTRIE
22)Autocomplete for phone keyboard Premise: We want to implement a simple autocomplete function for a phone keyboard. This is the feature where as the user is typing a word, suggestions appear above the keyboard. Our simple implementation will only suggest words that start with the partial word that the user has typed in so far (it doesn't take into account the preceding words or anything else). Problem: Given a list of all valid words, and the partial word typed by the user, return a list of words that have the partial word as a prefix. Also provide the space/time complexity of the solution. Here's a template that you can provide to the candidate (this one is in Python but should be easy to translate as needed): class Autocomplete: """A simple autocomplete tool for keyboards.""" def __init__(self, all_words: list[str]): """Constructor. Args: all_words: A list of all valid words. Words only include chars [a-z]. """ # Implement this. pass def get_predictions(self, partial_word: str) -> list[str]: """Returns a list of possible words that the user may be typing. Args: partial_word: the letters the user has typed so far for a given word. Returns: A list of words (from `all_words`) that the user could be typing. The returned words must all have `partial_word` as a prefix. """ # Implement this. passhttps://leetcode.com/problems/search-suggestions-system/description/TRIESearch suggestion system
23)There is a bank which has a fund of X dollars. The bank has to serve N customers one by one who may either deposit/withdraw money. The bank must stop serving any more customers if it meets a customer with a withdrawal request exceeding the current funds. Also, the bank has the power to refuse service to any number of customers but once the bank starts from any arbitrary customer, it continues serving each customer after that customer and can only stop if it is unable to make a withdrawal request greater than the bank's funds at that point of time. What is the maximum number of people the bank can serve? Input:First line will contain bank's initial fund: XSecond line will contain number of customers: N Each of the next N lines contain a possible transaction: R. If R is negative, then it is a deposit to the bank, else it is a withdrawal. Sample Input 1: 0— Initial bank fund 6 — number of customers-2 -6 164 -1 1 6543 Sample Output 1: 2 Explanation: If bank starts with serving the 1st customer, it will stop at 3rd customer: 2 If bank starts with serving the 2nd customer, it will stop at 3rd customer: 1 Bank can't start with serving the 3rd customer: 0 If bank starts with serving the 4th customer, it will stop at 6th customer: 2 Bank can't start with serving the 5th customer: 0 Bank can't start with serving the 6th customer: 0 Hence, the maximum number of people it can serve is 2, for which it could have started at 1st or 4th customer. Sample Input 2: 4 5 3 1 1 11 Sample Output 2: 4 Explanation: If bank starts with serving the 1st customer, it will stop at 3rd customer: 2 If bank starts with serving the 2nd customer, it will stop at the 5th customer: 4 If bank starts with serving the 3rd customer, it will stop at the 5th customer: 3 If bank starts with serving the 4th customer, it will stop at the 5th customer: 2 If bank starts with serving the 5th customer, it will stop at the 5th customer: 1 Hence, the maximum number of people it can serve is 4 when started at 2nd customer.https://leetcode.com/discuss/interview-question/4672208/Google-EliminationorPhone-Interview-Round-2024/Tricky loop coded by me
24)Given a node in a binary search tree, write the code that returns the next greater valued node. /** Example Tree 100 / \ 50 150 / \ / \ 25 75 125 200 / 65 **/
25)Space Debris Cleanup! :You are running a space organisation aiming to maintain clean orbits in space, and plan to clean up some space debris in the LEO (Low Earth Orbit). You have a very fine high-power laser that is able to evaporate a piece of debris in just seconds. However, electricity needed to do that is very costly. Your space engineers had estimated the cost for you in the following chart. Debris ID				Estimated Cost SL-12 AUX MOTOR 	$1,000 SL-12 DEB			$200 BREEZE-M R/B DEB 	$50,000 Your goal is to, under a certain budget limit, clean up as many pieces of debris as possible. Please provide an efficient algorithm to choose those pieces of debris. Example - Given a budget of $100, it should return empty list since there is no debris cleanup possible under that budget. - Given a budget of $1,500, it should return [SL-12 AUX MOTOR, SL-12 DEB] that consumes $1,200 out of $1,500 budget. - Given a budget of $50,000, it should still return [SL-12 AUX MOTOR, SL-12 DEB] that consumes $1,200 out of $50,000 budget, instead of [BREEZE-M R/B DEB] that will consumes all the budget but will clean up only one piece. - Given budget of $51,000, it can return any two pieces from the list. Tip: n log(n) is sub optimal
26)https://leetcode.com/problems/text-justification/text justification, minimum number of lines two texts, google interview
27)NOT SOLVED VERY HARD TO THINK ALSOSay we have a game of dice, where a single dice can have N sides, each with equal probability to come up when the dice is thrown. There are two dice A and B, and they both have N sides. The dice may have non-standard values on their sides, including duplicates. Given the values of the sides of the two dice. A dice wins when its number is greater than the other dice number. *Warm-up question -* Across all possible ways for a dice to fall, 1. In how many ways does A win? 2. In how many ways does B win? 3. In how many ways, it's a tie? *Main question -* There is a dice throwing contest, where there are K available dice, each one with N faces. Each dice will fight against each other dice (K*(K-1)/2). One such fight consists of multiple rounds, where all faces of one dice face against all the faces of the other dice (N^2). What is the dice that will win the most rounds?—>not solved
28)Grouping Duplicates You're given a list of elements. Each element has a unique id and 3 properties. Two elements are considered as duplicates if they share any of the 3 properties. Please write a function that takes the input and returns all the duplicates. - E1: id1, p1, p2, p3 E2: id2, p1, p4, p5  E3: id3, p6, p7, p8 in this example we should return {{id1, id2}, {id3}}
29)https://leetcode.com/discuss/interview-question/1700965/Google-or-Onsite-or-Array-duplicatesDID NOT SOLVE
30)Google Cloud Disk Cleanup We have a cloud storage system that provides features to manage storage disks and point-in-time snapshots of disks. The rules for how disks and snapshots are managed are as follows: - We can create new disks. - We can take snapshots of existing disks. - We can also create a disk from an existing snapshot of the disk. - We cannot delete a snapshot if there are any child-disks created from this snapshot as source. If they have no child-disks or all child-disks have been deleted, the snapshot can be deleted safely. - Deleting a disk first attempts to delete all dependent snapshots automatically, following the rules above. Given a list of disk and list of snapshot objects, return a sequence of disk deletions that can be used to safely delete all disks. C++ class Snap { // Snap name string name; // Disk of which this snap is string source_disk_name; // Disks created from this snap vector child_disks; }; class Disk { // Disk Name string name; }; C# public interface ISnap { // Snap name string Name { get; } // Disk of which this snap is string SourceDiskName { get; } // Disks created from this snap IReadOnlyCollection ChildDisks { get; } } public interface IDisk { // Disk Name string Name { get; } } Example: Disks = [A, B, C, D] Snaps = [{ name : alpha source_disk_name : A child_disks: [B] }, { name : alpha_2 source_disk_name : A }, { name : beta source_disk_name : B }, { name : beta_x source_disk_name : B child_disks : [C] }, { name : pi source_disk_name : D } ]Expected Output for main question: There may be multiple possible correct outputs. Some possible outputs are [D, C, B, A] and [C, B, A, D]. Since D is independent of the rest of the disks it can occur at any place in the sequence.
31)Stone Path Jumps A path consists of a sequence of stones, each marked with a non-negative integer. You start at the beginning and progress always forwards toward the end. When you step (or jump) onto a stone, you earn points equal to the value on that stone times the length of the step or jump, and you don't calculate the score of the stone you start at. The sum of all points is the total score you earned from traversing the complete path. Length is an integer, calculated as one plus the number of stones skipped. For example, if you step from the first to the fourth stone, you earn score equal to three times the value on the fourth stone. Given that you can jump as far as you want, what's the maximum score you can achieve for a given path? *Example* Given the sequence: 3 7 2 10 5 12 8 10 1 The score would be 81 for the following jump sequence: 3 →(5 stones)→ 12 →(2 stones)→ 10 →(1 stone)→ 1
32)You are given a running stream of numbers, find the median of all the numbers encountered so far1 You are given a running stream of numbers. Find the average of the last k numbers that you have encountered. You cannot access the array directly, consider it as a means to serve as a running stream. Return an array of the same size as the input array, where each element should be average of the last k numbers encountered. For the indices where k numbers have not been encountered yet, put those as -1.
vector<float> findRunningAverage(int n,vector<int> &runningStream, int windowSize){ // maintain queue for K elements queue<int> numberWindowQueue; vector<float> listOfaverageOfWindow; // maintain sum of k elements int sumOfLastKElements = 0; for (int i = 0 ; i < n; i++) { int number = runningStream[i]; sumOfLastKElements += number; numberWindowQueue.push(number); // if total elements > windowsize if (numberWindowQueue.size() >= windowSize) { while(numberWindowQueue.size() > windowSize) { sumOfLastKElements -= numberWindowQueue.front(); numberWindowQueue.pop(); } float avg = (float)(sumOfLastKElements / k); listOfaverageOfWindow.push_back(avg); } else { listOfaverageOfWindow.push_back(-1.00); } } return listOfaverageOfWindow; }Normal sliding window, keep a queue, size is k remove from first, deduct from total sum, calculate average
33)Blind robot in a maze There is a maze, specified by a 2D matrix with '#' indicating walls, '.' indicating free space, and 'E' indicating the exit. There's only one exit. A blind robot is somewhere in the maze. It can perform commands "U", "D", "L", "R" to move in one of 4 cardinal directions. If there's a wall in the way, the robot will not move, but will not sense it. If at some point while performing commands the robot happens to be on the exit cell, it will immediately escape the maze. Your job is to come up with a program consisting of a sequence of commands for the robot so that it will escape the maze no matter where it has started. Example input: ###### #.#E.# #....# ###### Example output: DRRUL
could not solve
34)Google Doc Table Simple problem statement: *Given English-language text and the width of a page, find how many lines the text would take on that page.* The above statement can be pasted in to the interview doc at the start of the interview. This question pretends the candidate is writing code for a word processor (like Google Docs or Microsoft Word), and candidates should be told clearly at the start to imagine that they are designing their code for this application. Candidates should be told that their code should "do what Google Docs would do," and encouraged to work out their requirements from this framing, rather than be given all requirements explicitly at the start. The English text might be anything a person would type into a word processor: an essay, a novel, a poem, a letter, ... It might have any kind of symbol in it, notably including newline characters. The standard presentation of this question allows the candidate to assume a monospace font -- see Follow-up Question 2 for a version which uses variable-width fonts. Exceedingly long words should be split in the same manner as in a word processor: they should first be placed on their own line, and then be broken arbitrarily at the line's end. Hyphenation is not necessary here, since hyphens should technically be placed only between syllables of words (and so hyphen placement would require a syllabic dictionary of the language being written); Google Docs does not offer automatic hyphenation. *Why Choose This Question?* The question involves a good amount of design and critical thinking. Specifically, candidates are expected to ask questions that clarify: - is the text left-aligned; - is hyphenation allowed; - how extra-long (more than one line) words should break; - whether the text contains newline characters; - whether the text font is uniform, whether it is monospace; - whether the width of the page is an integer number of characters or not (e.g. a number of inches or pixels); - could there be more than one space between words; - for challenge Q1, whether there's space between table borders & text; - for challenge Q1, whether table borders have size. Also, it involves a good amount of coding. Candidates must implement an algorithm that splits the text into words by whitespace characters and calculates how many of them would fit on a single line. Finally, follow-up question #1 requires knowledge of binary search or ternary search algorithms, required to efficiently calculate the best position for the column separator. This question should intentionally be underspecified when initially presented, to test a candidate's requirements-gathering ability. Seeing how a candidate asks questions to work out the problem's full requirements is almost as important as the code they end up writing. This can be hinted to candidates while presenting the question initially by opening by saying something like "this is partly a requirements-gathering problem..." and then instructing the candidate that their code should behave like Google Docs or MS Word would.

35)Wordle Problem Wordle is a game where there's a SECRET word. The player has to identify the word by providing a GUESS // all words of size n // only small cap alphabetic letters (a-z) Return COLOR containing B, Y and G, such that // B - letter at ith in GUESS not in SECRET // Y - letter at ith in GUESS in some other place in SECRET (not at ith) // G - letter at ith in GUESS perfectly matches the ith one in SECRET
 SECRET = ‘acdz’ GUESS = ‘cxdz’ COLOR = ‘YBGG’ SECRET = ‘hello’ GUESS = ‘helix’ COLOR = ‘GGGBB’ —--------------- [don’t give these examples to candidate] —------- one character in SECRET cannot map to multiple characters in GUESS SECRET = ‘ax’ GUESS = ‘aa’ COLOR = ‘GB’ // correctCOLOR = ‘GY’ // wrong choosing greedily from left to rightSECRET = ‘hello’ GUESS = ‘eaaae’ COLOR = ‘YBBBB’ or ‘BBBBY’ (first one is expected) (greedily choose from left to right) preference of G over Y SECRET = 'ab' GUESS = 'bb' COLOR = 'YB' [buggy implementation] COLOR = 'BG' [correct answer]
36)Suppose you are at university and have grades for a course // Course: programming // Exams // exam 1: 10 // exam 2: 8 // Labs // lab 1: 7 // lab 2: 7 Now you want to compute the final grade of the course as follows // Course: programming -> 7 // Exams -> 9 // exam 1: 10 // exam 2: 8 // Labs -> 7 // lab 1: 7 // lab 2: 7 Follow up, what if we generalize the structure? // Exams -> 9 // exam 1: 10 // exam 2: 8 // Labs -> 7// lab 1: 7 // lab 2: --> .. // week 1: --> ... // coding question 1: 10 // coding question 2: 8 // ... // week 2: --> ... // ... // Project: 5 Follow up: What if this is an online course where grades are updated all the time? (caching, cache updates)
DID NOT SOLVE- NOT ABLE TO UNDERSTAND THE QUEST̛ION
37)Playlist shuffle You are working on a music streaming app that has a "shuffle playlist" feature. There is some user feedback complaining that sometimes, two songs from the same artist are played consecutively, which doesn't feel random. You've been tasked with reimplementing this feature so that it avoids playing songs from the same artist consecutively. Song objects look like this: [ {"artist": "New Order", "title": "Blue Monday"}, {"artist": "New Order", "title": "True Faith"}, {"artist": "Kraftwerk", "title": "Computer World"}, {"artist": "Kraftwerk", "title": "The Man Machine"}, {"artist": "Kraftwerk", "title": "Radioactivity"}, {"artist": "Kraftwerk", "title": "Trans-Europe Express"}, {"artist": "The Smiths", "title": "How Soon Is Now?"}, {"artist": "David Bowie", "title": "Under Pressure"}, {"artist": "Fleetwood Mac", "title": "Dreams"}, {"artist": "Fleetwood Mac", "title": "Everywhere"}, {"artist": "Fleetwood Mac", "title": "The Chain"}, ] Say we swap out each song by a unique letter corresponding to its artist. The original playlist then looks like this: AABBBBCDEEE If we simply perform a random shuffle, you might end up with a playlist that looks like this: DABEEBBBECA Note how there are lots of places where songs by the same artist are adjacent. Ideally we'd like our shuffled playlist to distribute songs by the same artist like this: EABECBDEBBA Note that there is still a pair of songs by artist B that are played next to each other, but that's okay. It doesn't have to be perfect. How would you write a new shuffle function that spreads out songs by the same artist so they are less likely to play sequentially?Same as - https://leetcode.com/problems/reorganize-string/
Heap and block it
38)Note Passing 1. Students are laid out in a grid of desks in the classroom. They want to pass notes to each other but the teacher doesn’t want them to. The closer to the teacher they are, the higher their chances of getting caught are. The first row has a 90% chance of getting caught when passing notes horizontally. Passing a note horizontally is much more likely for them to be caught than passing vertically. The first row has a 50% chance of being caught when passing the note to the row behind them. With each subsequent row, the risk is halved. 2. To the south of a radiation source, computers are arranged in a grid, each with a network link to its neighbors. The radiation causes some network packets to be lost. In the closest row of computers to the radiation source, 90% of packets sent east-west are lost, whereas 50% of packets sent north-south are lost. With each row further south, away from the radiation source, the risk of packet loss is halved. Setup diagram: https://screenshot.googleplex.com/SAgfQ3fYhkh.png Setup in ASCII: Teacher Student <---90%---> Student <---90%---> Student |						 | 						| 50% 					50%					50% |						 | 						| Student <---45%---> Student <---45%---> Student |						 |						 | 25% 					25% 					25% | 						 | 						 | Student <--22.5%--> Student <--22.5%--> Student 
Radiation Source Computer <---90%---> Computer <---90%---> Computer | | | 50% 50% 50% | | | Computer <---45%---> Computer <---45%---> Computer | | | 25% 25% 25% | | | Computer <--22.5%--> Computer <--22.5%--> Computer Goal: Setup + Remember Statistics Assuming fixed risk probabilities horizontally (90%) and vertically (50%), halfing each time we go back. Given a full path from student A to student B, compute the risk of getting caught. Provide a full path here. Note: We want to multiply the chance of success and then subtract that from 1.
// Similar leetcode questionhttps://leetcode.com/problems/path-with-maximum-probability/submissions/1460258966/
39)Remove Leaves For details, refer to: go/remove-leaves Starter Question: Given a tree, you need to select a leaf and remove it. You can select any leaf if there are multiple leaves. Repeat this process until all the nodes are removed. Return the removal sequence. Only one removal sequence is needed. Requirement: 1. if a leaf is removed and its parent becomes a new leaf, then the new leaf must be removed before all other nodes. 2. you need to cut edges between nodes.Many approaches— topo sort most intuitive,366. Find Leaves of Binary TreeDFS with insertion of nodes baed on height, similar to right/left view of binary tree logic

40)Assign Questions to Volunteers You run a support questions and answers website like StackOverflow. Recently, the amount of questions has grown dramatically. A group of engineers has volunteered to help but each volunteer has a prioritised list of tags they can support. Volunteers must be assigned questions with tags from their personal tags list. Here is example data in JSON form:{ "questions": [{ "id": "0", "title": "how do i install vs code", "tags": ["mac", "vs code"] }, { "id": "1", "title": "my program is too slow please help", "tags": ["python", "ai"] }, { "id": "2", "title": "why is the hitbox off by 2 pixels", "tags": ["c#", "game"] }, { "id": "3", "title": "my dependency injection stack trace is strange", "tags": ["java", "oop"] },{ "id": "4", "title": "socket.recv is freezing", "tags": ["python", "networking"] }, { "id": "5", "title": "i have a memory leak", "tags": ["c++", "networking"] }  ], "volunteers": [ { "id": "sam5k", "tags": ["python", "networking"] },{ "id": "djpat", "tags": ["ai"] }, { "id": "jessg", "tags": ["java", "networking"] },{ "id": "rayo", "tags": ["java", "networking"] }  ] }Create a function that returns an assignments object like so: [{'question': '1', 'volunteer': 'sam5k'}, {'question': '3', 'volunteer': 'jessg'}, {'question': '4', 'volunteer': 'rayo'}]

41)Devise a way to transform a list of strings as a single string, such that we can reverse this transformation back into the original list of strings. Devise a way to transform a *list of strings* as a *single string*, such that we can reverse this transformation back into the original list of strings. So, given a list of strings: ["a", "b", "c"] 1.) Write a function that takes the list and returns the single-string representation ex: fn(string[]) -> string 2.) Then, write a function that can convert the single string back into the original array ex: fn(string) -> string[]easy
42)Car maze Given a 2D maze with R rows and C columns. Each cell is either a wall or a road cell. Given two cars with their individual start and goal. The cars will take turns to move and the goal is to let both cars arrive at their goals. In each turn a car can: 1. Move up/down/right/left for 1 step if the next step is not a wall nor another car. 2. Don't move. Skip this turn. Given a maze and the starts and goals of the two cars. Is it possible to let the cars arrive at their goals? (note that even though a car might reach it's goal, it can still move.) *Input format*First line will contain R C indicating the row and column counts. Following by R lines of C characters. - # indicates a wall - . indicates a road cell - a indicates the starting cell of the first car - A indicates the goal of the first car - b indicates the starting cell of the second car - B indicates the goal of the second car *Input 1* 3 3 a.A ### b.B*Output 1* true 
*Input 2* 3 3 a.b .#. A.B *Output 2* true 
*Input 3* 1 4 aBAb *Output 3* false 
*Input 4* 2 4 ##.# aBAb *Output 4* true 
*Input 5* 3 4 ###. BaAb ###. *Output 5* true 
*Input 6* 1 10 ab......BA *Output 6* false
*Input 7* 3 3 a#b .## A#B *Output 7* false 
*Guidelines* - It is recommended to ask a warmup with only 1 car first and hint TC to base on that solution to solve the main question. - Example inputs and outputs can work as cases to reject wrong solution. It is recommended to paste these to the share docs at the first time to guide TC to the correct solution. *Warmup Question with 1 car* Given a 2D maze with R rows and C columns. Each cell is either a wall or a road cell. Given a car with its start and goal. In each step the car can move up/down/right/left for 1 cell if the next cell is not a wall. Given a maze and the start and goal. Is it possible to let the car arrive at its goal? *Input format* First line will contain R C indicating the row and column counts. Following by R lines of C characters. - # indicates a wall - . indicates a road cell - a indicates the starting cell of the car - A indicates the goal of the car *Input 1* 3 3 a.A ### ### *Output 1* true *Input 2* 1 3 a#A *Output 2* false
Eliminate the negative cases’4 times bfscheck if a and 'A' are connected and same for 'b' and 'B' (using BFS/DFS on the grid). If no return falsecheck if setting B to obstacle disconnects a and A (set grid[B.first][B.second] = OBSTACLE and then check if a and A are still connected). If a and A are still connected return truedo step 2 for A as well, return true if b and B are still connectedDo a BFS/DFS from a (or b, upto you), if you find any node with 3 adjacent non-obstacle nodes, return true	Else return falseComplexity is linear in the size of input (i.e. O(mn)).Don't try to automatically go for rote-learned pre-existing solutions, try thinking about what the key difficulty is in the problem and come up with different invariants/propositions and try to prove/disprove them


43)A company called GoodCorp has a data network that can be visualized as a graph of nodes connected by cables where each node can transfer data to other nodes. A malicious hacker company, MaliciousCorp has managed to hack and corrupt one of these nodes which stops the transfer of data going through it. 
In Part 1, we start by giving TC a minimal framework to setup before building on top of it in a sequence that is easier to digest and parse for TC (L3). Then in Part 2, we add a new requirement that requires TC to add a new data structure and modify the original function to keep track of the cost. In Part 3, we introduce "virality", which asks TC to leverage the func that // calculates the distance/cost between nodes for the corrupted node. 
Part 1: Given this network and what node was corrupted, GoodCorp wants to know whether it is possible to transfer data between two nodes (a source and destination node). Can you write a function for this? Part 2: Now, GoodCorp wants to know the minimal cost or the distance between the source node and all other reachable (non-corrupted) nodes for record keeping, which can be represented as a map of node to distance. Can you update the func to provide for this? Part 3: Now, the corrupted node has gained the ability to corrupt its neighbors. Virality describes the maximum distance from the infected node that neighbors are also corrupted, so that data transferring through them is lost. Now, given the virality of the corrupted node, can you update the code to account for this? *Sample Input:* 1 - 2 - 3 8 - 10 - 12 | |\ / 4 - 5 - 6 - 7 9 - 11 *Sample output for Part #1:* Source Node: 2 Destination Node: 9 Corrupted Node: 7 Output: FALSE Explanation: We cannot reach Node 9 from Node 2 *Sample output for Part #2:* Source Node: 2 Corrupted Node: 7 Output: | | ---- | -------------------- Node | Distance from source 1 | 1 3 | 1 4 | 1 5 | 2 6 | 3 *Sample output for Part #3:* Source Node: 2 Corrupted Node : 10 Virality: 1 Output: | | ---- | -------------------- Node | Distance from source 1 | 1 3 | 1 4 | 1 5 | 2 6 | 3 7 | 4 Explanation: Node 10 will corrupt Nodes 8 and 12. So Node 7 cannot pass on its data to Node 8 and hence it will not reach any node from Node 7 onwards.Smple bfs and Djikstra
44)You have a stream of RPC requests coming in. Each log is of theform {id, timestamp, type(start/end)}. Given a timeout T, you need to figure out at the earliest possible time if a requesthas timed out.Eg :id - time - type0 - 0 - Start1 - 1 - Start0 - 2 - End2 - 6 - Start1 - 7 - EndTimeout = 3Ans : {1, 6} ( figured out id 1 had timed out at time 6 )Find in log file if RPC Timed Out First ask if TC knows what an RPC server is. If they don't, explain to them in a few words e.g. as a web server serving page requests. Imagine you have an RPC server that produces log of entries and we're analyzing it offline. There are two entries for each call, one when the RPC starts and one when the RPC finishes processing. We'd like to know as soon as possible if there's an RPC that took too much time / timed out.https://leetcode.com/discuss/interview-question/924141/google-phone-screen-new-gradhttps://leetcode.com/discuss/interview-question/4137303/Google-Interview-Question/Hi,
I have question from Google interview, that I still don't know how to resolve :)
We have a big log file - several gigabytes. Each line contains request/response log - with columns like REQUEST_ID, TIMESTAMP, START/END FLAG. We need to parse file, and print requests ids that exceeded given time threshold. Some of requests contains start log, but has never completed and do not have log with end time.
i.e.
1 1 START
2 2 START
1 4 END
3 8 START
3 15 END
And given timeout threshold as 5.
Request 1 started at 1
Request 2 started at 2
Request 1 ended at 4 ->4-1 = 3 < 5 - under threshold - it's ok - do nothing.
Request 3 started at 8 -> In this place we should already know that request 2 started at 2, and 8-2 = 6 what is > 5, that means we should print here that request 2 is timed out.
Request 3 ended at 15 - >15-8 =7 > 5 -> we shoud print that request 3 timed out.
Does anyone have idea how to solve this efficiently ?
Deueue +hashmapsame as logger rate limiter

45)Implement a class called SuperStack that implements the stack interface: push(k), peek(), pop(). Additionally, the stack should implement the functions sum() and inc(n, k). *push(k):* pushes element k onto the stack *peek():* returns the top element of the stack *pop():* pops the top element off the stack *sum():* returns the total sum of the stack *inc(n, k):* increment the bottom n elements by k *Example:* From an empty stack: OperationStack VisualisationPush(5) [5]Push(7) [5,7] Push(2) [5,7,2] Push(20) [5,7,2,20] Sum() [5,7,2,20] => return 34 Inc(3,4) [9,11,6,20] Sum() [9,11,6,20] => return 46 Pop() [9,11,6] => return 20 Peek() [9,11,6] => return 6
class SuperStack { vector<int> stack; int sum; SuperStack(){ sum = 0; } void push(int k){ stack.push_back(k); sum += k; } int peek(){ return stack[stack.size()-1]; } int pop(){ int top = stack[stack.size()-1]; stack.erase(stack.end()); sum -= top; return top; } int sum(){ return sum; } void inc(int n, int k){ if(n > stack.size()){ n = stack.size(); } for(int i=0; i<n; i++){ stack[i] += k; } sum += (n*k); } } 11:46 I asked about complexity, TC indicated O(1) for all methods, except for inc, for which they indicated O(n), which is correct. 11:47 I asked if we can improve complexity for inc function. 11:49 TC suggested using a map to store the increments for each index, i pointed out that it would still be O(n) for inc since each index needs to be written. 11:51 I gave a hint to think in terms of incrementing all values below n, so increment applies to all things below.11:57 TC discussed using a single variable to store an increment value, but realized that it won't work for multiple increments 12:10 class SuperStack { vector<int> stack; int sum; map<int, int> increments; SuperStack(){ sum = 0; } void push(int k){ stack.push_back(k); sum += k; } int peek(){ int increaseBy = 0; if(increments[stack.size()] != NULL){ increaseBy = increments[stack.size()]; } return stack[stack.size()-1] + increaseBy; } int pop(){ int increaseBy = increments[stack.size()]; if(stack.size() > 0){ increments[stack.size()-1] += increments[stack.size()]; } increments.erase(stack.size()); int top = stack[stack.size()-1] + increaseBy; stack.erase(stack.end()); sum -= top; return top; } int sum(){ return sum; } void inc(int n, int k){ if(n > stack.size()){ n = stack.size(); } increments[n] += k; sum += (n*k); } }// 1381. Design a Stack With Increment Operationlazy propagation, for sum we can maintain a sum variable
46)Most Beautiful Footpath This question is assessing if TC is familiar with dynamic programming or memoization using two-pointers. NOTE: This is a warm-up question. The main question begins at the Follow-up Question 1. In a city, there is a footpath constructed using blocks of different colors. There can be contiguous blocks of same color as well which makes the footpath beautiful. A chief guest is going to visit the city and the city department wants to make the most beautiful footpath. Beauty value of the footpath is the largest number of continuous blocks painted with chief guest's favorite color. You are given a positive number n (number of blocks in footpath) and number k (number of available colors for blocks). Each block can be painted with exactly one of the given colors (block_colors[i-1] is the color value of ith block, i starting from 1).Chief guest's favorite color is c (1 <= c <= k). Warm-up question: Find the beauty value of the footpath. Example 1: n=9 k=6 block_colors={6, 5, 2, 1, 2, 3, 2, 4, 5} c=2 There is footpath of 9 blocks having 6 different colors. Chief guest's favorite color is 2. Hence, beauty value is 1. Example 2: n=10 k=6 block_colors={6, 5, 2, 1, 2, 2, 3, 4, 5, 2} c=2 In this case, the beauty value is 2. int GetBeautyValue(const int n, const int k, const int c, const std::vector& block_colors) { // implement }
 Follow Up Question Consider that the city department acts quick and tries to repaint at most m (1 <= m <= n) blocks such that the beauty value for a particular favorite color is maximized. Question: Return the maximum beauty value possible after the repaint. int GetMaximumBeautyValue(const int n, const int k, const int c, const int m, const std::vector<int>& block_colors) { // implement }1004. Max Consecutive Ones III—same
47)The Sum of Sum of Good Subarrays An arithmetic sequence is a list of numbers with a definite pattern. If you take any number in the sequence then subtract it from the previous one, the difference is always a constant. A good arithmetic sequence is an arithmetic sequence with a common difference of either 1 or -1. - For example, [4, 5, 6] is a good arithmetic sequence. So is [6, 5, 4], [10, 9], or [-3, -2, -1]. But, [1, 2, 1] (no common difference) or [3, 7] (common difference is 4) is NOT. Implied, any sequence that has only one element is a good arithmetic sequence. - For example, [4] is a good arithmetic sequence. Given an integer array nums, return the sum of the sums of each subarray that is a good arithmetic sequence. Example: Given nums = [7, 4, 5, 6, 5]. Each of the following subarrays is a good arithmetic sequence: [7], [4], [5], [6], [5], [4, 5], [5, 6], [6, 5], [4, 5, 6] The sums of these subarrays are: 7, 4, 5, 6, 5, 4 + 5 = 9, 5 + 6 = 11, 6 + 5 = 11, 4 + 5 + 6 = 15 Thus, the answer is the sum of all the sums above, which is: 7 + 4 + 5 + 6 + 5 + 9 + 11 + 11 + 15 = 73
Solutionint l = leftBad[i];int r = rightBad[i];int x = (i - l) * (r - i) * nums[i] - nums[i];res += x;actual trick is to calculate the leftbad and right bad for each index efficiently using stack// https://www.reddit.com/r/leetcode/comments/1b22k2q/google_onsite_round_1_monotonic_stack_problem/

48)Mouse and Cat *Warm up question*: Given a grid of size (N x N), cells S and T, impassable cells with water, find if an S->T path exists, assuming we can only move horizontally/vertically. *No coding required*, only explain how you would solve this problem. Once TC mentions DFS or BFS or describes equivalent ideas conceptually: Which of the two options seems more attractive, and why? What auxiliary data structures do you need? *Main question*: A mouse is trying to get from its starting position S to a treat T, while moving only on land cells and staying as far away as possible from the cat C. Formally, assume again a square grid of size (N x N), allowing only horizontal and vertical moves, impassable cells with water, and cells S, T, and C. We want to find a path from S to T for which the minimal distance to C along the path is maximal. Use the L1 (aka. Manhattan) distance measure, i.e., the sum of the horizontal and vertical distances.//https://leetcode.com/problems/find-the-safest-path-in-a-grid/description/// https://leetcode.com/discuss/interview-question/5564321/Google-L4/// https://leetcode.com/discuss/interview-experience/4786499/Google-Round-1/// https://leetcode.com/discuss/interview-question/5611032/Google-Interview-Question-Cat-and-Mouse/

49)Find the largest number in an Array or List This is a simple warm-up question. Find the largest number in an array or list of numbers. This is not a trick question. Find any duplicate in an integer array Find any duplicates in an integer array of size N and range of integers [0..N-1] in O(n) time and O(1) space. - You are able to modify the input array - There are no spare/unused bits in integers: e.g. N=2^32 and elements are 32-bit unsigned integers Clarifications (good if TC asks themselves) - It is ok to hint early that the array could be considered a hash table - A value may repeat more than twice : [0 0 0] - There may be multiple duplicates of multiple numbers: [0 0 1 1] - There may be no duplicates at all [0 1] Why this works well: - TC comprehension can be leveled by the amount of hints required to finalize the solution. - The code isn't too complex but there are a few caveats which good candidates realize, and others often fail. Specifically for inputs like [1 2 2] we should not increment the current index after the first swapping since we'll leave the swapped-in element unanalyzed. Also TCs tend to mis-handle the self-linking case like [0]. If TC claims the code is finalized, I give them these inputs and see if they can spot the problem by themselves. - While the question can easily be scaled down to trivial solutions by not complying to time/space requirements, such solutions are extensively leakedhttps://leetcode.com/discuss/interview-question/1700965/google-onsite-array-duplicatesAnother question of finding duplicates in a an array which contains negative elements also
50)You are given a 2D matrix of unique values. Find the length of the longest strictly increasing path in it.We define the path in the following way:1) Next cell in the path has to be in the same row or the same column as the previous cell (not necessarily adjacent)2) We can start anywhere3) The values of the visited cells have to be strictly increasing along the path You are given a 2D matrix of unique values. Find the length of the longest strictly increasing path in it. We define the path in the following way: 1) Next cell in the path has to be in the same row or the same column as the previous cell (not necessarily adjacent) 2) We can start anywhere 3) The values of the visited cells have to be strictly increasing along the pathsimple bfshttps://leetcode.com/problems/longest-increasing-path-in-a-matrix/description/Simple DFS
51)Warm Up Question:* Let the *score* of a word be the sum of distances between adjacent letters. For example, the score for the word *bad* is 4, as a is 1 letter away from b, and d is 3 away from a.Write a function *calculateScore* that takes a word and computes its score. 
*Main question:* Two words are anagrams if they consist of the same letters in a different order. So for example, “cat” and “act” are anagrams of one another. Suppose that a function *hashAnagram* is provided which given a word, will return a hash value which will be identical for all anagrams of this word. Time complexity of *hashAnagram* is O(1) - this is because there is a constant upper limit to *word_length*, and hence O(*word_length*) is asymptotically equivalent to O(1). Given the functions *calculateScore* and *hashAnagram*, write a *BestAnagramFinder* class with a method *findBestAnagram* that takes a word, and returns the anagram with the highest score from a collection of all possible words provided during class initialization.*Note: implementing hashAnagram was originally part of that question but that part is now banned.* class BestAnagramFinder { List dictionary; public BestAnagramFinder(List dictionary) { this.dictionary = dictionary; } int calculateScore(String word) { // Implement me } // hashAnagram(word1) == hashAnagram(word2) IFF word1 == word2 OR word1 is an anagram of word 2. long hashAnagram(String word) { // Provided for you } } class BestAnagramFinder { public: BestAnagramFinder(std::vector dictionary) : dictionary_(std::move(dictionary)) {} int CalculateScore(const std::string& word) { // Implement me } long HashAnagram(const std::string& word) { // Provided for you } private: std::vector dictionary_; }; class BestAnagramFinder { private dictionary: string[]; constructor(dictionary: string[]) { this.dictionary = dictionary; } calculateScore(word: string): number { // Implement me } // hashAnagram(word1) == hashAnagram(word2) IFF word1 == word2 OR word1 is an anagram of word 2. hashAnagram(word: string): number { // Provided for you } } Optimal Complexity for a dictionary of size N is O(N) preprocess, O(1) finds. I’d still consider O(NLogN) pre-process and O(1) finds a good optimization though. O(N) or worse finds I would consider a lacking solution and would push the candidate to optimize if time allows.
// https://leetcode.com/discuss/interview-experience/5720580/Google-or-SDE(L3)-or-BangaloreHyd-or-Aug-24/

52)Find contiguous subarray with largest min+max Given an array of n positive integers, find a contiguous subarray (containing more than one number) with the largest min + max. Examples: 4, 6, 2, 8, 10 -> Answer is 18 (10 + 8) 6, 2, 9, 1, 7 -> Answer is 11 (2 + 9)
2104. Sum of Subarray Rangeshttps://leetcode.com/problems/sum-of-subarray-minimums/description/Let me what you all think about this solution for round 3 onsite.https://leetcode.com/problems/sum-of-subarray-minimums/description/ -> for this problem you find the sum of subarray minimums.Similarly find the sum of subarray maximums, then just add both of them.DID NOT SOLVE

53)Implement a restaurant waitlist data structure. It should support the following features: 1. A party of customers can join the waitlist. 2. A previously joined party can leave the waitlist at any time. 3. The restaurant can ask the data structure for the first party that fits a given table size (a table size is given as an argument).
class Customer { int id; String name; int groupSize; } class WaitList{ private Dequeue<Customer> waitlist; private Map<Integer, Customer> groupMap; WaitList(){ waitlist = new LinkedList<>(); groupMap = new HashMap<>(); } void addCustomer(Customer customer){ if(groupMap.containsKey(customer.id)){ throw new CustomerIdAlreadyPresentException(); } grouMap.put(customer.id, customer); waitList.offerLast(customer); } void removeCustomer(Customer customer){ if(!groupMap.containsKey(customer.id)){ throw new CustomerNotPresentException(); } for(Iterator iterator = waitlist.iterator; iterator.hasNext();){ // O(n) Customer presentCustomer = iterator.next(); if(presentCustomer.id == customer.id){ iterator.remove(); break; } } groupMap.remove(customer.id); } String assignTable(int tableSize){ if(waitlist.isEmpty()){ throw new NoCustomerPresentException(); } String customerSelected = ""; for(Iterator iterator = waitlist.iterator; iterator.hasNext();){ Customer presentCustomer = iterator.next(); if(presentCustomer.groupSize >= tableSize){ customerSelected = customer.name; iterator.remove(); break; } } if(customerSelected.equals("") return new noCustomerFoundException()); return customerSelected; } } ``` 10:59-11:14 TC started to think about optimizations. TC said using a doubly linked list is better than dequeue because removing a node from the doubly linked list is faster. TC could not figure out how to improve the serving operation so I told TC to implement whatever they had first. ``` class Customer { int id; String name; int groupSize; // Customer(int id, String name, int groupSize){ } class Node { Customer cust; Node prev, next; } class WaitList{ private Map<Integer, Node<Customer>> customerMap; private Node head, tail; WaitList(){ waitlist = new LinkedList<>(); groupMap = new HashMap<>(); head = new Node(null); tail = new Node(null); head.next = tail; tail.prev = head; } void addCustomer(Customer customer){ Node node = new Node(Customer); addToTail(node); customerMap.put(customer.id, node); } void AddToTail(Node node){ node.prev = tail.prev; node.next = tail; tail.prev.next = node; tail.prev = node; } void removeCustomer(Customer customer){ Node node = customerMap.get(customer.id); removeNode(node); } void removeNode(Node node){ node.prev.next = node.next; node.next.prev = node.prev; } String customerServe(int tableSize){ Node curr = head; String presentCustomer = ""; while(curr != null){ if(curr.customer.groupSize >= tableSize){ presentCustomer = curr.customer.name; removeNode(curr); break; } curr = curr.next; } }// https://leetcode.com/discuss/interview-experience/1461079/google-swe-l3l4-dublin-ireland-rejectnaive way using DLL and hasmap, optimal using treemap, table size to linkedhasmap of customers, floor entry

54)Building a market order book Imagine a marketplace where individuals sell product "ABC." Sellers enter the market at any time and input their desired selling price for ABC into the market's computer system. The system then sorts this information (known as the order book) in ascending order of price. If multiple sellers offer the same price, their entries are further ordered by the time they entered the system (timestamp). This ensures that the seller with the lowest asking price is always the first to sell when a buyer arrives. All prices entered are in the range of $0.01 to $100.00. Each seller can only submit one order at a time, and each order can only offer one unit of product ABC. Input: - *seller_id*: A unique identifier for each seller. - *price*: The price the seller is willing to sell ABC for. - *timestamp*: The time the order was submitted. Design two functions: - *insert_order(seller_id, price, timestamp)*: This function inserts the seller's order into the order book, ensuring proper sorting based on price and timestamp. - *get_lowest_seller_id()*: This function returns the unique identifier of the seller currently offering ABC at the lowest price and removes the seller from the order book (their product is sold!). We can use this question to assess whether the TC is able to propose various solutions, discuss their trade-offs and evolve. Besides that, it assesses the knowledge of TCs about data structures and sorting algorithms.

55)Invert rotation table  which is similar but sufficiently different to keep as a separate question) Given on-call rotation schedule for multiple people by: their unique name, start time (timestamp 0-max int64) and end time (timestamp 0-max int64) of the rotation: Example input: Name | Start | End ----- | ----- | --- Abby | 10     | 100 Ben   | 50     | 70 Carla | 60    | 120 David | 150  | 300 Your goal is to return a rotation table without overlapping periods representing who is on call during that time. Return "Start time", "End time" and list of on-call people: Do not include time periods that do not have on-call people. Specifically in the given example, this means excluding the period between 120-150. Example output: Start | End | Names ----- | --- | ----------------10 	  | 50 | Abby 50	  | 60 | Abby, Ben 60	  | 70 | Abby, Ben, Carla 70 	  | 100 | Abby, Carla 100   | 120 | Carla 150   | 300 | David Why this works well - No deep insight or a-ha moment needed. This is about analytical thinking and good coding. - This works for all levels as there are multiple solutions of varying complexities, from simple sorting, interval splitting to the use of min-heaps. - Gives chance to ask lots of clarifying questions:Can a person have multiple start/end times? Can those schedules intersect for the same person? If the name matches, are they the same person? Can a time period have 0 length? - Solution involves multiple data structures. - Have multiple solutions, some of them are really beautiful. - May include copying a data structure. - Lots of edge cases to test. I advise making sure that TC is aware of all assumptions before implementing their solution. - This question is deeper than it looks at first. Many candidates approach it with an abundance of confidence. It's excellent to measure the level of the candidate's thinking. - Solution to this problem cannot have complexity better than O(n^2), where n is number of people, because of the output nature. Imagine a case with 1000 people, where first starts at 1 and finishes at 1001, second starts at 2 and finishes 1001, etc. Program will print n^2/2 (500K - half of 1000x1000 table) names in the output. Analysis of the complexity can give additional signals about TC's comprehension of their solution complexity (many of them claims their complexity is O(nlogn)) and fix attempts may tell you more about TC's knowledge of working with data structures. Often TC either doesn't know how to easily copy the list and what is this operation complexity (it is O(length of the list)) or passes pointer to the list which will result in it being further modified and printing last interval's names for all intervals. - What hints do you give when the candidate is stuck? - Reduced problems: - Each person only has a single segment. - Only two or three people participate. - Segments are already sorted. - All start & end times are unique, aka every input number is different. - Totally forget about names and return just intervals. - Output suboptimal intervals, like 1-2-Abby, 2-3-Abby, 3-4-Abby instead of 1-4-Abby.
56)invert rotation table http://go/iq/2505 There is a concept of oncall where a person signs up to handle tickets for a particular time duration. E.g. Anirudh 13 19 Bala 5 7 Chintan 6 12 Deepankar 1 11 1. At a given time 't', can you come back with the oncall engineers available at that time. 1b. Let us say that the oncall table is known beforehand. And only calls to 't' are made. Would there be any change in strategy? Q2. Your goal is to return a table for time periods and the oncall engineers at that time. For example, if the input is:Anirudh 13 19 Bala 5 7 Chintan 6 12 Deepankar 1 11 The desired output is: 1 5 Deepankar 5 6 Bala Deepankar 6 7 Bala Chintan Deepankar 7 11 Chintan Deepankar 11 12 Chintan 13 19 Anirudh
57)You are given a list of houses grouped into neighborhoods of equal sizes. Houses are painted in colors. The *first input* is an array representing house numbers in each neighborhood. One sub-array represents one neighborhood. Example: { {8, 2, 9}, {4, 6, 4}, {4, 5, 1} } Each house is painted, so the *second input* is an array representing the color codes for each house. Example: { {'r', 'g', 'b'}, {'w', 'c', 'b'}, {'x', 'y', 'b'} } This means that House 8 is painted in color r, House 2 is g, House 9 is b etc. Imagine that you can move houses, reorganize the neighborhoods such that the houses in each neighborhood are in ascending order, and no house numbers are repeated in a neighborhood. *The neighborhood structure must be preserved*, meaning that the number of neighborhoods and the number of houses per neighborhood should remain the same as given. Here are a couple of possible outputs of how the houses from the example above could be restructured: { {1, 2, 4}, {4, 5, 6}, {4, 8, 9} } { {1, 4, 6}, {2, 4, 8}, {4, 5, 9} } Return all houses structured in neighborhoods along with their colors in the new order. If printing it, a sample output would look like this: { {1b, 4b, 6c}, {2g, 4x, 8r}, {4w, 5y, 9b} } *Follow-up question:* After assigning houses to each neighborhood, it is possible that we may end up with identical neighborhoods e.g. { {7, 8, 9}, {7, 8, 9}, {1, 2, 3} } How will you modify your solution so that no two consecutive neighborhoods are identical? The above neighborhood, after rearranging, should look like: { {7, 8, 9}, {1, 2, 3}, {7, 8, 9} } *Note: A phone screen interview can omit the "colors" part of the question and only ask it as a follow-up if TC solves the reorganizing of houses.* *Note: An L4 interview can remove the these assumptions: The input for the colors is not guaranteed to match the structure and a house number may occur more times than the number of neighborhoods.*
row wise fill, then column wise fill, freq map, max heap
58)Sinbad the Sailor Sinbad is out on the high seas, and he wants to maximize the distance he will travel. Sinbad has access to Google's weather API, so he knows how fast the winds will blow in the next N days, which he writes down as an array A. If Sinbad works on day i, his ship will move forwards A[i] kilometres. However, Sinbad is very lazy, and doesn't like to work too hard for too long. Sinbad starts the trip at his energy capacity, K. A single day of work reduces it by 1. A single day of rest increases it by 1. With zero energy, Sinbad cannot work, and resting at full energy is possible but does nothing. Example values: N = 7 A = [10, 20, 0, 30, 5, 0, 10] K = 3 We would like to write an algorithm that tells Sinbad on which days he should work, so as to maximize his distance traveled by the end of the trip.https://leetcode.com/discuss/interview-question/2304772/Google-or-Onsite-or-Londonhttps://leetcode.com/discuss/interview-question/1505772/google-onsite-interview
59)Blocking paths Q1) Given an undirected graph, and two nodes A, B. Find the shortest path between them. Input Format: - First line: Two integers N and E representing the number of nodes and the number of edges. - Next E lines: Each line has a pair of nodes, U and V, representing U and V are connected by a bi-directional edge. - Last line: Two integers defining A and B. Output Format: - The shortest distance between A and B, or -1 if A and B are not connected. Example: The below input represents a graph with 3 nodes (1,2,3), while 1 connects to 2 and 3 but 2 and 3 are not connected directly. - 3 2 - 1 2 - 1 3 - 2 3 The output should be 2. ------------------------------ Q2) [Follow-up] Find the number of nodes that are there on any shortest path between A and B. Input Format: - Same as above. Output Format: - The number of nodes between A and B which are on any shortest path, or 0 if A and B are not connected. ------------------------------ Q3) [Main-question] Assume Alice starts from node A and would like to reach node B. But Alice's enemy Bob is at node C and wants to prevent Alice from reaching B. Alice and Bob know each other's starting position. Alice would take one of the shortest paths and would declare that. Now both of them have the same speed of traversing the graph, and both start at the same time. If there is a node in Alice's pre-decided path where Bob reaches first or at the same time, Alice is blocked and doesn't reach node B. Input Format: - First line: Two integers N and E representing the number of nodes and the number of edges. - Next E lines: Each line has a pair of nodes, U and V, representing U and V are connected by a bi-directional edge. - Last line: Three integers defining A, B and C. Output Format: - Yes, if Alice can reach B, or No if Alice cannot.
60)You are given a list of domain names and an integer "score" for each of them. A domain is a "leaf" if it doesn't have any child domains in the input. A leaf domain's "total score" is the sum of the scores of itself and all its ancestor domains.Write a program that, given a list of domains and their scores, outputs a list of leaf domains with their respective total scores.You are given a list of domain names and an integer "score" for each of them.You have to print the absolute parents, the domains which are not a subset of another domains, and the total value of it Example input:test.mydomain.com 10 mail.test.mydomain.com 15test.com -10 com 20 mydomain.com 5 www.mydomain.com 10mail.test.com 10 www.test.com -5 Example output: mail.test.mydomain.com 50 // (20 + 5 + 10 + 15) www.mydomain.com 35 // (10 + 5 + 20) mail.test.com 20 // (10 - 10 + 20) www.test.com 5 // (-5 - 10 + 20) 
com a.com b.a.com c.a.com